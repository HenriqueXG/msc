import { ITagProps } from "@blueprintjs/core";
import * as React from "react";
export interface AuthorObject {
    name: string;
}
export interface HeaderDataProps {
    authors: AuthorObject[];
    title: string;
    description: string;
    tags: string[];
}
export interface HeaderEditorProps {
    /**
     * The data that the header should be populated with.
     */
    headerData: HeaderDataProps;
    /**
     * Whether or not the fields of the header can be edited.
     */
    editable: boolean;
    /**
     * An event handler to run whenever header fields are modified.
     */
    onChange: (props?: HeaderDataProps) => void;
    /**
     * The theme of the header.
     */
    theme: "light" | "dark";
}
export interface HeaderEditorState {
    editMode: "none" | "author" | "tag";
}
export declare class HeaderEditor extends React.PureComponent<HeaderEditorProps, HeaderEditorState> {
    static defaultProps: {
        editable: boolean;
        headerData: {
            authors: never[];
            description: string;
            tags: never[];
            title: string;
        };
        onChange: () => void;
        onRemove: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, props: ITagProps) => void;
        theme: string;
    };
    constructor(props: HeaderEditorProps);
    render(): JSX.Element;
}
